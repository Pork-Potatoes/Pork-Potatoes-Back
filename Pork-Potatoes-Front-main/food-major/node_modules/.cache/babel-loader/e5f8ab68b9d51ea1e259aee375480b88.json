{"ast":null,"code":"var _jsxFileName = \"/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/components/RestuarantInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { BsFillBookmarkFill, BsBookmark, BsStar } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 165px;\n  margin-right: 165px;\n  margin-bottom: 50px;\n  padding-top: 70px;\n`;\n_c = RestInfo;\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  margin-top: 50px;\n`;\n_c2 = Title;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: auto;\n  margin-top: 10px;\n`;\n_c3 = Info;\nconst Detail = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  justify-content: flex-start;\n  width:60vw;\n  height:20vh;\n  line-height: 3;\n`;\n_c4 = Detail;\nconst Map = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width:40vw;\n  height:40vh;\n`;\n_c5 = Map;\nconst {\n  kakao\n} = window;\n\nconst RestaurantInfo = ({\n  restaurantNum,\n  restaurantName,\n  address,\n  phoneNum,\n  businessHour,\n  snsAccount,\n  notice,\n  avgScore,\n  scrap\n}) => {\n  _s();\n\n  const [scraped, setScraped] = useState(scrap);\n  useEffect(() => {\n    const container = document.getElementById('restMap');\n    const options = {\n      center: new kakao.maps.LatLng(37.56113771854151, 126.9464649322563),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    const geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(address, function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n        const marker = new kakao.maps.Marker({\n          map: map,\n          position: coords\n        });\n        map.setCenter(coords);\n        console.log(coords);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RestInfo, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [restaurantName, \" \", /*#__PURE__*/_jsxDEV(BsStar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 62\n        }, this), \" \", avgScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), scraped ? /*#__PURE__*/_jsxDEV(BsBookmark, {\n        onClick: () => setScraped(!scraped),\n        color: \"#d57358\",\n        size: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(BsFillBookmarkFill, {\n        onClick: () => setScraped(!scraped),\n        color: \"#d57358\",\n        size: \"30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 99\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      children: [/*#__PURE__*/_jsxDEV(Detail, {\n        children: [\"\\uC8FC\\uC18C : \", address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 27\n        }, this), \"\\uC804\\uD654\\uBC88\\uD638 : \", phoneNum, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this), \"\\uC6F9\\uC0AC\\uC774\\uD2B8 : \", snsAccount, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 32\n        }, this), \"\\uC601\\uC5C5\\uC2DC\\uAC04 : \", businessHour, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        id: \"restMap\",\n        children: \"\\uC9C0\\uB3C4\\uC785\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RestaurantInfo, \"ZWywjB8lZ7htnkwoShsRRlEhVro=\");\n\n_c6 = RestaurantInfo;\nexport default RestaurantInfo;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"RestInfo\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Info\");\n$RefreshReg$(_c4, \"Detail\");\n$RefreshReg$(_c5, \"Map\");\n$RefreshReg$(_c6, \"RestaurantInfo\");","map":{"version":3,"sources":["/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/components/RestuarantInfo.js"],"names":["React","useEffect","useState","styled","BsFillBookmarkFill","BsBookmark","BsStar","RestInfo","div","Title","Info","Detail","Map","kakao","window","RestaurantInfo","restaurantNum","restaurantName","address","phoneNum","businessHour","snsAccount","notice","avgScore","scrap","scraped","setScraped","container","document","getElementById","options","center","maps","LatLng","level","map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","setCenter","console","log","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from \"styled-components\";\nimport { BsFillBookmarkFill, BsBookmark, BsStar } from \"react-icons/bs\";\n\nconst RestInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 165px;\n  margin-right: 165px;\n  margin-bottom: 50px;\n  padding-top: 70px;\n`\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  margin-top: 50px;\n`\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: auto;\n  margin-top: 10px;\n`\n\nconst Detail = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  justify-content: flex-start;\n  width:60vw;\n  height:20vh;\n  line-height: 3;\n`\n\nconst Map = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width:40vw;\n  height:40vh;\n`\n\nconst { kakao } = window;\n\nconst RestaurantInfo = ({restaurantNum, restaurantName, address, phoneNum, businessHour, snsAccount, notice, avgScore, scrap}) => {\n  const [scraped, setScraped] = useState(scrap);\n  useEffect(()=> {\n    const container = document.getElementById('restMap');\n      const options = {\n        center: new kakao.maps.LatLng(37.56113771854151,126.9464649322563),\n        level: 3\n      };\n      const map = new kakao.maps.Map(container, options);\n      const geocoder = new kakao.maps.services.Geocoder();\n      geocoder.addressSearch(address, function (result, status) {\n            \n            if (status === kakao.maps.services.Status.OK) {\n\n                const coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n                const marker = new kakao.maps.Marker({\n                    map: map,\n                    position: coords\n                });\n                map.setCenter(coords);\n                console.log(coords);\n            }\n        });\n\n    }, []); \n\n  return (\n      <RestInfo>\n        <Title>\n          <h2 style={{textAlign: 'center'}}>{restaurantName} <BsStar /> {avgScore}</h2>\n          {scraped ? <BsBookmark onClick={()=>setScraped(!scraped)} color=\"#d57358\" size=\"30\"/> : <BsFillBookmarkFill onClick={()=>setScraped(!scraped)} color=\"#d57358\" size=\"30\"/>}\n        </Title>\n        <Info>\n          <Detail>\n            주소 : {address}<br/>\n            전화번호 : {phoneNum}<br/>\n            웹사이트 : {snsAccount}<br/>\n            영업시간 : {businessHour}<br/>\n          </Detail>\n          <Map id='restMap'>지도입니다</Map>\n        </Info>\n      </RestInfo>\n  );\n};\n\nexport default RestaurantInfo;"]},"metadata":{},"sourceType":"module"}