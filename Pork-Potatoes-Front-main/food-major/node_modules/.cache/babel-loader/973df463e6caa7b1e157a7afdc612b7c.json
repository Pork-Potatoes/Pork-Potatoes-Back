{"ast":null,"code":"var _jsxFileName = \"/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/pages/MyReviewPage.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport _ from 'lodash';\nimport styled from \"styled-components\";\nimport https from \"https\";\nimport Review from \"../components/Review\";\nimport Pagination from \"../components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 2400px;\n`;\n_c = Contents;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n`;\n_c2 = Container;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n`;\n_c3 = Grid;\nconst agent = new https.Agent({\n  rejectUnauthorized: false\n});\n\nclass MyReviewPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getReviews = async () => {\n      try {\n        const {\n          data: reviews\n        } = await axios.get(\"https://www.matzipmajor.com/api/reviews/recent\", {\n          httpsAgent: agent\n        });\n        this.setState({\n          reviews,\n          isLoading: false\n        });\n      } catch (e) {\n        console.log(\"getReviews error\");\n      }\n    };\n\n    this.state = {\n      reviews: [],\n      currentPage: 1,\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getReviews();\n  }\n\n  render() {\n    const {\n      isLoading,\n      reviews\n    } = this.state;\n\n    const handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    const paginate = (reviews, pageNumber) => {\n      const startIndex = (pageNumber - 1) * 6;\n      return _(reviews).slice(startIndex).take(6).value();\n    };\n\n    const pagedReviews = paginate(reviews, this.state.currentPage);\n    const {\n      length: count\n    } = reviews;\n    return /*#__PURE__*/_jsxDEV(Contents, {\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"500\"\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: \"15px\",\n            paddingBottom: \"30px\"\n          },\n          children: \"\\uB0B4\\uAC00 \\uC4F4 \\uB9AC\\uBDF0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: Object.values(pagedReviews).map(review => /*#__PURE__*/_jsxDEV(Review, {\n            image: review.filePath,\n            content: review.content,\n            restaurantName: review.restaurant.restaurantName,\n            menuName: review.menuName,\n            tagFood: review.tagFood,\n            tagMood: review.tagMood,\n            score: review.score,\n            url: review.url\n          }, review.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsCount: count,\n        currentPage: this.state.currentPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyReviewPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Contents\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Grid\");","map":{"version":3,"sources":["/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/pages/MyReviewPage.js"],"names":["React","axios","_","styled","https","Review","Pagination","Contents","div","Container","Grid","agent","Agent","rejectUnauthorized","MyReviewPage","Component","constructor","props","getReviews","data","reviews","get","httpsAgent","setState","isLoading","e","console","log","state","currentPage","componentDidMount","render","handlePageChange","page","paginate","pageNumber","startIndex","slice","take","value","pagedReviews","length","count","width","height","display","alignItems","justifyContent","fontWeight","margin","paddingBottom","Object","values","map","review","filePath","content","restaurant","restaurantName","menuName","tagFood","tagMood","score","url","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport _ from 'lodash';\nimport styled from \"styled-components\";\nimport https from \"https\"\nimport Review from \"../components/Review\";\nimport Pagination from \"../components/Pagination\";\n\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 2400px;\n`\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: center;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n`\n\nconst agent = new https.Agent({\n  rejectUnauthorized: false\n});\n\nclass MyReviewPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      reviews: [],\n      currentPage: 1,\n      isLoading: true\n    }\n  }\n  getReviews = async () => {\n    try{\n      const {data: reviews} = await axios.get(\"https://www.matzipmajor.com/api/reviews/recent\", {httpsAgent: agent});\n      this.setState({ reviews, isLoading: false });\n    }\n    catch(e){\n      console.log(\"getReviews error\");\n    }\n  }\n  componentDidMount() {\n    this.getReviews();\n  }\n\n  render() {\n    const {isLoading, reviews} = this.state;\n    const handlePageChange = (page) => {\n      this.setState({currentPage: page});\n    };\n    const paginate = (reviews, pageNumber) => {\n      const startIndex = (pageNumber-1) * 6;\n      return _(reviews)\n        .slice(startIndex)\n        .take(6)\n        .value();\n    }\n    const pagedReviews = paginate(reviews, this.state.currentPage);\n    const {length: count} = reviews;\n    return(\n      <Contents>\n        {isLoading\n        ? (\n          <div style={{width:\"100%\", height: \"100vh\", display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}>\n            <span style={{fontWeight:\"500\"}}>Loading...</span>\n          </div>\n        )\n        : (\n          <Container>\n            <h1 style={{margin:\"15px\", paddingBottom:\"30px\"}}>내가 쓴 리뷰</h1>\n            <Grid>\n              {Object.values(pagedReviews).map( (review) =>\n                <Review key={review.id}\n                  image={review.filePath}\n                  content={review.content}\n                  restaurantName={review.restaurant.restaurantName}\n                  menuName={review.menuName}\n                  tagFood={review.tagFood}\n                  tagMood={review.tagMood}\n                  score={review.score}\n                  url={review.url} />\n              )}\n            </Grid>\n          </Container>\n        )}\n        <Pagination\n          itemsCount={count}\n          currentPage={this.state.currentPage}\n          onPageChange={handlePageChange}\n        />\n      </Contents>\n    );\n  }\n}\n\nexport default MyReviewPage;\n"]},"metadata":{},"sourceType":"module"}