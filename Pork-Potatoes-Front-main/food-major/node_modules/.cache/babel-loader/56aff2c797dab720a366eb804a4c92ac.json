{"ast":null,"code":"var _jsxFileName = \"/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/pages/DetailPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport Review from \"../components/Review\";\nimport RestuarantInfo from '../components/RestuarantInfo';\nimport image from \"../assets/reviewImg.png\";\nimport React from \"react\";\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contents = styled.div`\n  display:flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n_c = Contents;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`;\n_c2 = Grid;\nconst NewReview = styled.div`\n  height: 560px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 150px;\n`;\n_c3 = NewReview;\n\nconst DetailPage = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    restaurantNum,\n    restaurantName,\n    address,\n    phoneNum,\n    businessHour,\n    snsAccount,\n    avgScore\n  } = location.state;\n  const [data, setData] = useState();\n  useEffect(async () => {\n    try {\n      const response = await axios.get(`https://www.matzipmajor.com/api/restaurants/${restaurantNum}/reviews?sort=-created-date`);\n      setData(response.data);\n    } catch (e) {\n      console.log(\"error\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(RestuarantInfo, {\n      restaurantName: restaurantName,\n      address: address,\n      phoneNum: phoneNum,\n      businessHour: businessHour,\n      snsAccount: snsAccount,\n      avgScore: avgScore,\n      scrap: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewReview, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: 0,\n          marginLeft: 15\n        },\n        children: \"\\uCD5C\\uC2E0 \\uB9AC\\uBDF0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contents, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: data === null || data === void 0 ? void 0 : data.map(review => /*#__PURE__*/_jsxDEV(Review, {\n            reviewNum: review.reviewNum,\n            image: review.filePath,\n            content: review.content,\n            restaurantName: review.restaurant.restaurantName,\n            menuName: review.menuName,\n            tagFood: review.tagFood,\n            tagMood: review.tagMood,\n            score: review.score,\n            createdDate: review.createdDate,\n            likedCnt: review.likedCnt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailPage, \"cRkKpd3jdRkZ+RnVefOgNVOsh/A=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = DetailPage;\nexport default DetailPage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Contents\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"NewReview\");\n$RefreshReg$(_c4, \"DetailPage\");","map":{"version":3,"sources":["/Users/minjukim/Documents/GitHub/Pork-Potatoes-Back/Pork-Potatoes-Front-main/food-major/src/pages/DetailPage.js"],"names":["useState","useEffect","axios","styled","Review","RestuarantInfo","image","React","useLocation","Contents","div","Grid","NewReview","DetailPage","location","restaurantNum","restaurantName","address","phoneNum","businessHour","snsAccount","avgScore","state","data","setData","response","get","e","console","log","marginBottom","marginLeft","map","review","reviewNum","filePath","content","restaurant","menuName","tagFood","tagMood","score","createdDate","likedCnt"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport styled from \"styled-components\";\nimport Review from \"../components/Review\";\nimport RestuarantInfo from '../components/RestuarantInfo';\nimport image from \"../assets/reviewImg.png\";\nimport React from \"react\";\nimport {useLocation} from \"react-router\";\n\nconst Contents = styled.div`\n  display:flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n`\n\nconst NewReview = styled.div`\n  height: 560px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  margin-left: 150px;\n`\n\n\nconst DetailPage = () => {\n  const location = useLocation();\n  const {restaurantNum, restaurantName,address,phoneNum,businessHour,snsAccount,avgScore}=location.state;\n\n  const [data,setData] = useState();\n\n    useEffect(async() => {\n        try{\n            const response = await axios.get(`https://www.matzipmajor.com/api/restaurants/${restaurantNum}/reviews?sort=-created-date`);\n            setData(response.data);\n        } catch (e) {\n            console.log(\"error\");\n        }\n    },[]);\n\n  return (\n    <div>\n      <RestuarantInfo \n        restaurantName={restaurantName}\n        address={address}\n        phoneNum={phoneNum}\n        businessHour={businessHour}\n        snsAccount={snsAccount} \n        avgScore={avgScore}\n        scrap=\"true\"/>\n      <NewReview>\n        <h3 style={{marginBottom:0, marginLeft:15}}>최신 리뷰</h3>\n            <Contents>\n              <Grid>\n                {data?.map((review) =>\n                  <Review reviewNum={review.reviewNum}\n                    image={review.filePath}\n                    content={review.content}\n                    restaurantName={review.restaurant.restaurantName}\n                    menuName={review.menuName}\n                    tagFood={review.tagFood}\n                    tagMood={review.tagMood}\n                    score={review.score}\n                    createdDate={review.createdDate}\n                    likedCnt={review.likedCnt}\n                    />\n                )}\n              </Grid>\n            </Contents>\n      </NewReview>\n    </div>\n  );\n};\n\nexport default DetailPage;"]},"metadata":{},"sourceType":"module"}